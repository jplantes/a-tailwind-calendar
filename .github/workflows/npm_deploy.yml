name: Publish Angular Library to NPM and Create GitHub Release

on:
  push:
    branches:
      - master # Solo se ejecuta cuando se hace push a la rama master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necesario para que las acciones de versionado funcionen correctamente

      # Paso 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Versión de Node.js que deseas usar
          registry-url: 'https://registry.npmjs.org' # Registro de NPM

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 5: Compilar la librería de Angular
      - name: Build Angular library
        run: npx ng build a-tailwind-calendar --configuration production # Especifica el proyecto a compilar
        run: cd dist/a-tailwind-calendar && npm pack # Empaqueta la librería para NPM

      # Paso 6: Publico el paquete en NPM
      - name: Publish the package to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # NPM will automatically authenticate with this

      # Paso 8: Crear un archivo .zip con los artefactos
      - name: Create release artifact
        run: |
          mkdir release-artifact
          cp -r ./dist/a-tailwind-calendar/* ./release-artifact/
          zip -r release-artifact.zip ./release-artifact

      # Paso 9: Subir el archivo .zip como artefacto
      - name: Upload release artifact
        uses: actions/upload-artifact@v4 # Versión actualizada
        with:
          name: release-artifact
          path: release-artifact.zip

      # Paso 10: Crear una release en GitHub
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # Solo si hay un nuevo tag
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # O usa secrets.GH_PAT si es necesario
          tag_name: ${{ steps.bump-version.outputs.new_tag }}
          name: Release ${{ steps.bump-version.outputs.new_tag }}
          body: ${{ steps.bump-version.outputs.changelog }}
          draft: false
          prerelease: false
          files: release-artifact.zip